%% Parameter estimation of the DN detail model
% presented in Fig. 4a, b, and Supplementary Fig. 5.

addpath(genpath('./'));

data_xray_path = 'data/data_xray.csv';
data_xray = read_data(data_xray_path);

% Parameter names
ps_name = {'phidn' 'phictec' ...
    'deltadn1' 'deltadn2' 'deltadn3' 'deltadn4' 'deltac' ...
    'mudn1' 'mudn2' 'mudn3' 'mudn4' ...
    'muc1' 'muc2' 'muc3' 'muc4' ... 
    'r1' 'r2' 'r3' ...
    'ndn10' 'ndn20' 'ndn30' 'ndn40' 'nctec0' ...
    'pdn1' 'pdn2' 'pdn3' 'pdn4' 'pctec' ...
    'omegadn1' 'omegadn2' 'omegadn3' 'omegadn4' 'omegactec' ...
    ... % DP
    'r4' ...
    'pdp' 'omegadp' 'ndp0'  'r_2' 'k_2' 'mu_2' 'tau_2' ...    
    };
cols_model = {'DN1',  'DN2', 'DN3', 'DN4', 'cTEC', 'DP'};

% Options for parameter estimation
opts=ddeset('Events',@dde_stop_events);
opts.Display = 'iter-detailed';
opts.FunValCheck = 'on';

% Indices of parameters whose bounds are [0, 1]
ratio_ind = [...
    index_of(ps_name, 'pdn1') ...
    index_of(ps_name, 'pdn2') ...
    index_of(ps_name, 'pdn3') ...
    index_of(ps_name, 'pdn4') ...
    index_of(ps_name, 'pctec') ...
    index_of(ps_name, 'pdp') ...  
];

%% Parameter estimation (phi_1 is fixed)
filename = 'params/dn_sub_fix_phi.mat';
load(filename)

% Lower and upper bounds of parameters
lb = min(ps_give * 0.1, ps_give * 10);
ub = max(ps_give * 0.1, ps_give * 10);
ub(ratio_ind(ps_order(ratio_ind) == 1)) = 1;

% Fix values of paramters shared with the coarse grained model
est_ind = 1:length(ps_give);
fix_ind = [ ...
    index_of(ps_name, 'phi_1') ...        
    index_of(ps_name, 'r1') ...     
    index_of(ps_name, 'r2') ... 
    index_of(ps_name, 'r3') ...       
    index_of(ps_name, 'phictec') ... 
    index_of(ps_name, 'deltac') ... 
    index_of(ps_name, 'omegactec') ... 
    index_of(ps_name, 'pctec') ...         
    index_of(ps_name, 'nctec0') ... 
    index_of(ps_name, 'ndp0') ...     
    index_of(ps_name, 'pdp') ... 
    index_of(ps_name, 'omegadp') ... 
    index_of(ps_name, 'r_2') ... 
    index_of(ps_name, 'k_2') ... 
    index_of(ps_name, 'mu_2') ... 
    index_of(ps_name, 'tau_2') ... 
];
for i = 1:length(fix_ind)
    est_ind(est_ind == fix_ind(i)) = [];
end
ps_give_est = ps_give(est_ind);
lb_est = lb(est_ind);
ub_est = ub(est_ind);


[ps_opt_est,resnorm,residual,exitflag,output,lambda,jacobian]= ...
    lsqnonlin(@(ps) diff_dn_sub(subst_est(ps, est_ind, ps_give), ps_order, data_xray, ps_name), ...
    ps_give_est, lb_est, ub_est, opts);

ps_opt = ps_give;
ps_opt(est_ind) = ps_opt_est;

save(filename, 'ps_give', 'ps_order', 'ps_opt', 'est_ind', 'lb_est', 'ub_est');

%% Parameter estimation (phi_1 is not fixed)
filename = 'params/dn_sub_free_phi.mat';
load(filename)

% Lower and upper bounds of parameters
lb = min(ps_give * 0.1, ps_give * 10);
ub = max(ps_give * 0.1, ps_give * 10);
ub(ratio_ind(ps_order(ratio_ind) == 1)) = 1;

% Fix values of paramters shared with the coarse grained model except phi_1
est_ind = 1:length(ps_give);
fix_ind = [ ...
    index_of(ps_name, 'r1') ...     
    index_of(ps_name, 'r2') ... 
    index_of(ps_name, 'r3') ...       
    index_of(ps_name, 'phictec') ... 
    index_of(ps_name, 'deltac') ... 
    index_of(ps_name, 'omegactec') ... 
    index_of(ps_name, 'pctec') ...         
    index_of(ps_name, 'nctec0') ... 
    index_of(ps_name, 'ndp0') ...     
    index_of(ps_name, 'pdp') ... 
    index_of(ps_name, 'omegadp') ... 
    index_of(ps_name, 'r_2') ... 
    index_of(ps_name, 'k_2') ... 
    index_of(ps_name, 'mu_2') ... 
    index_of(ps_name, 'tau_2') ... 
];
for i = 1:length(fix_ind)
    est_ind(est_ind == fix_ind(i)) = [];
end
ps_give_est = ps_give(est_ind);
lb_est = lb(est_ind);
ub_est = ub(est_ind);

[ps_opt_est,resnorm,residual,exitflag,output,lambda,jacobian]= ...
    lsqnonlin(@(ps) diff_dn_sub(subst_est(ps, est_ind, ps_give), ps_order, data_xray, ps_name), ...
    ps_give_est, lb_est, ub_est, opts);

ps_opt = ps_give;
ps_opt(est_ind) = ps_opt_est;

save(filename, 'ps_give', 'ps_order', 'ps_opt', 'est_ind', 'lb_est', 'ub_est');

%% Plot
load('params/dn_sub_free_phi.mat')
params = set_params_order(ps_opt, ps_order, ps_name);
lags = [params.tau_2];

tMax = 50;
sol = dde23(@(t, n, Z) dde_model_dn_sub(t, n, Z, params) ,lags, ...
    @(t) dde_history_dn_sub(t, params),[0, tMax]);

[t, ntots, n, xrays] = calc_xray_dn_sub(params, sol, tMax);

for i = 1:length(cols_model)
    col = cols_model{i};    
    
    h = semilogy(t, ntots(i,:));
    hold on;        
    scatter(data_xray.(col).day, data_xray.(col).val, 15, get(h, 'color'), 'filled', 'HandleVisibility','off');
end